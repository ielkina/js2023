import cars from "../data/cardsExport.js";

console.log("mod7-04-rusich-one.js");
//–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏—è –Ω–∞ –æ–±—â–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è –∏ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
// const container = document.querySelector(".js-container");
// [...container.children].forEach((item) =>
//   item.addEventListener("click", onClick)
// );
// container.addEventListener("click", onClick);

// function onClick(e) {
//   const el = e.target.classList.contains("js-box");
//   //–∏–Ω–≤–µ—Ä—Å–∏—è (!) —É—Å–ª–æ–≤–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
//   //—Ç.–µ –µ—Å–ª–∏ –æ–±—Ö–æ–¥–∏–º–æ–µ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ä–∞–∑—É –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è/–≤—ã—Ö–æ–¥–∏—Ç –∏ —É—Å–ª–æ–≤–∏—è
//   if (!el) {
//     return;
//   }
//   // console.log(e.currentTarget.dataset.color);
//   console.log(e.currentTarget);
//   console.log(e.target);
//   console.log(e.target.dataset.color);
// }

//–ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏

// const container = document.querySelector(".js-content");
// let player = "‚úñ";
// let historyX = [];
// let historyO = [];
// const wins = [
//   [1, 2, 3],
//   [4, 5, 6],
//   [7, 8, 9],
//   [1, 4, 7],
//   [2, 5, 8],
//   [3, 6, 9],
//   [1, 5, 9],
//   [3, 5, 7],
// ];

// function createMarkup() {
//   let markup = "";
//   for (let i = 1; i < 10; i += 1) {
//     markup += `<div class="item js-item"data-id="${i}"></div>`;
//   }
//   container.innerHTML = markup;
// }
// createMarkup();

// container.addEventListener("click", onClick);

// function onClick(e) {
//   const { target } = e;
//   if (!target.classList.contains("js-item") || target.textContent) {
//     return;
//   }
//   const id = Number(target.dataset.id);
//   let result = false;
//   if (player === "‚úñ") {
//     historyX.push(id);
//     result = isWinner(historyX);
//   } else {
//     historyO.push(id);
//     result = isWinner(historyO);
//   }
//   target.textContent = player;
//   const isEndGame = historyO.length + historyX.length === 9;
//   if (result) {
//     alert(`winner ${player} üòé`);
//     resetGame();
//     return;
//   } else if (isEndGame) {
//     alert(`Try again üò±`);
//     resetGame();
//     return;
//   }
//   player = player === "‚úñ" ? "‚≠ï" : "‚úñ";
// }

// function isWinner(arr) {
//   return wins.some((item) => item.every((id) => arr.includes(id)));
// }

// function resetGame() {
//   createMarkup();
//   historyX = [];
//   historyO = [];
//   player = "‚úñ";
// }
//1,41

// const instance = basicLightbox.create(/*html*/ `
//    <h1>Dynamic Content</h1>
//    <p>you can set the content of the lightbox with js.</p>
//   `);
// console.log(instance);
// instance.show();

const container = document.querySelector(".js-container");

const markup = cars.map(
  ({ img, model, type, id }) => `
  <li  class= "js-target js-card" data-car-id="${id}">
    <img  class= "js-target" src="${img}" alt="${model}" width="300">
    <h2 class= "js-target" >${model} ${type}</h2>
  </li>
`
);
container.insertAdjacentHTML("beforeend", markup.join(""));
container.addEventListener("click", onClick);

function onClick(e) {
  const { target } = e;
  // if (target.nodeName === "UL") {
  //   return
  // }
  // console.log(target);
  if (!target.classList.contains("js-target")) {
    return;
  }
  // console.log(target);
  //dataset —Å—ä–µ–¥–∞–µ—Ç –ø—Ä–æ–±–µ–ª –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –∫—ç–º—ç–ª–∫–∞—Å–µ
  //?? –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω—É–ª–µ–≤–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ null undefined
  const carId = target.dataset.carId ?? target.closest('.js-card').dataset.carId
  // console.log(carId);
  // console.log(e);
  const currentItem = cars.find(({ id }) => id === Number(carId));
  console.log(currentItem);
  const instance = basicLightbox.create(/*html*/`
  <div style="background-color: #fff;">
    <img loading="lazy" src="${currentItem.img}" class="image" width="300" height="" alt="${currentItem.model}">
    <h2>${currentItem.model}</h2>
    <h3>${currentItem.type}</h3>
    <p>${currentItem.price}</p>
  </div>
`)
  instance.show();
}
