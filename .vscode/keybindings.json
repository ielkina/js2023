// Поместите настраиваемые сочетания клавиш в этот файл, чтобы переопределить сочетания клавиш по умолчанию.auto[]
[
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+oem_102",
    "command": "editor.action.copyLinesDownAction"
  },
  {
    "key": "ctrl+alt+n",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+k q",
    "command": "-quokka.makeQuokkaFromExistingFile",
    "when": "!quokka.isLiveShareClient && !terminalFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log(${TM_SELECTED_TEXT}$1);$2"
    }
  },
  {
    "key": "ctrl+alt+q",
    "command": "quokka.toggle"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "ctrl+shift+numpad_add",
    "command": "workbench.action.tasks.reRunTask"
  },
  {
    "key": "ctrl+shift+numpad_subtract",
    "command": "workbench.action.tasks.terminate"
  },
  {
    "key": "alt+`",
    "command": "extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+p",
    "command": "extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+x",
    "command": "livePreview.end"
  },
  {
    "key": "shift+down",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "ctrl+alt+e",
    "command": "-rest-client.switch-environment"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+alt+e",
    "command": "-extension.scssRefactoringExtractVariable",
    "when": "editorTextFocus"
  },
  {
    "key": "oem_102",
    "command": "extension.scssRefactoringExtractVariable"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+s",
    "command": "editor.action.formatDocument"
  },
  {
    "key": "alt+s",
    "command": "extension.wrapTag",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+i",
    "command": "-extension.wrapTag",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+up",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+oem_102",
    "command": "editor.action.copyLinesDownAction"
  },
  {
    "key": "shift+2",
    "command": "cSpell.goToNextSpellingIssueAndSuggest"
  },
  {
    "key": "alt+x alt+i",
    "command": "editor.action.toggleRenderWhitespace"
  },
  {
    "key": "ctrl+oem_4",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+oem_4",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+oem_6",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+oem_6",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+o",
    "command": "liveSass.command.watchMySass"
  },
  {
    "key": "shift+q",
    "command": "selector-js.qs"
  },
  {
    "key": "shift+1",
    "command": "wrapSelection.backtick",
    "when": "config.multilineWrap.keybindings.backtick && editorHasSelection && editorTextFocus"
  },
  {
    "key": "oem_3",
    "command": "-wrapSelection.backtick",
    "when": "config.multilineWrap.keybindings.backtick && editorHasSelection && editorTextFocus"
  }
]